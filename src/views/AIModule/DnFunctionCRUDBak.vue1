<template>
  <div id="divLayout" ref="refDivLayout" class="div_layout">
    <!--标题层-->

    <div style="position: relative; width: 648px; height: 37px; left: 0px; top: 0px">
      <label id="lblViewTitle" name="lblViewTitle" class="h5">{{ strTitle }} </label>
      <label id="lblMsg_List" name="lblMsg_List" class="text-warning" style="width: 250px"> </label>
    </div>
    <!--查询层-->

    <div id="divQuery" ref="refDivQuery" class="div_query">
      <table
        id="tabEdit"
        style="width: 900px"
        class="table table-bordered table-hover table td table-sm"
      >
        <tr>
          <td class="text-left">
            <label
              id="lblDnFunctionId_q"
              name="lblDnFunctionId_q"
              class="col-form-label-sm text-right"
              style="width: 90px"
            >
              Dn函数Id
            </label>
          </td>
          <td class="text-left">
            <input
              id="txtDnFunctionId_q"
              name="txtDnFunctionId_q"
              class="form-control form-control-sm"
              style="width: 120px"
            />
          </td>
          <td class="text-left">
            <label
              id="lblDnFunctionName_q"
              name="lblDnFunctionName_q"
              class="col-form-label-sm text-right"
              style="width: 90px"
            >
              Dn函数
            </label>
          </td>
          <td class="text-left">
            <input
              id="txtDnFunctionName_q"
              name="txtDnFunctionName_q"
              class="form-control form-control-sm"
              style="width: 120px"
            />
          </td>
          <td class="text-left">
            <label
              id="lblAssociationMappingId_q"
              name="lblAssociationMappingId_q"
              class="col-form-label-sm text-right"
              style="width: 100px"
            >
              关联关系映射
            </label>
          </td>
          <td class="text-left">
            <select
              id="ddlAssociationMappingId_q"
              name="ddlAssociationMappingId_q"
              class="form-control form-control-sm"
              style="width: 140px"
            ></select>
          </td>
          <td class="text-left">
            <button
              id="btnQuery"
              type="submit"
              name="btnQuery"
              class="btn btn-outline-warning text-nowrap"
              @click="btn_Click('Query', '')"
              >查询</button
            >
          </td>
        </tr>
        <tr>
          <td class="text-left">
            <button
              id="btnExportExcel"
              type="submit"
              name="btnExportExcel"
              class="btn btn-outline-warning text-nowrap"
              @click="btn_Click('ExportExcel', '')"
              >导出Excel</button
            >
          </td>
        </tr>
      </table>
    </div>
    <!--功能区-->

    <div id="divFunction" ref="refDivFunction" class="table table-bordered table-hover">
      <ul class="nav">
        <li class="nav-item">
          <label
            id="lblDnFunctionList"
            name="lblDnFunctionList"
            class="col-form-label-sm text-info"
            style="width: 250px"
          >
            数据结点函数列表
          </label>
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnAddNewRecord"
            name="btnAddNewRecord"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('CreateWithMaxId', '')"
            >添加</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnCopyRecord"
            name="btnCopyRecord"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('Clone', '')"
            >复制记录</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnUpdateRecord"
            name="btnUpdateRecord"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('Update', '')"
            >修改</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnDelRecord"
            name="btnDelRecord"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('Delete', '')"
            >删除</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnRefresh"
            name="btnRefresh"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('ReFreshCache', '')"
            >刷新1</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnJumpToNewTab"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('JumpToNewTab', '')"
            >跳转到新Tab</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnTestAutoComplete"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('TestAutoComplete', '')"
            >测试AutoComplete</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnTestAutoCompletePro"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('TestAutoCompletePro', '')"
            >测试AutoCompletePro</button
          >
        </li>
        <li class="nav-item ml-3">
          <button
            id="btnJumpToNewWin"
            class="btn btn-outline-info btn-sm text-nowrap"
            @click="btn_Click('JumpToNewWin', '')"
            >跳转到新窗口</button
          >
        </li>
      </ul>
    </div>
    <!--列表层-->
    <div id="divList" ref="refDivList" class="div_List">
      <div id="divDataLst" ref="refDivDataLst" class="div_List"> </div>
      <div id="divPager" class="pager"> </div>
      <input id="hidSortDnFunctionBy" type="hidden" />
    </div>
    <!--编辑层-->
    <DnFunction_EditCom ref="refDnFunction_Edit"></DnFunction_EditCom>
    <!--详细信息层-->
    <DnFunction_DetailCom ref="refDnFunction_Detail"></DnFunction_DetailCom>
    <input id="hidOpType" type="hidden" />
    <input id="hidKeyId" type="hidden" />
  </div>
</template>
<script lang="ts">
  import 'jquery/dist/jquery.min.js';
  import 'bootstrap/dist/js/bootstrap.min.js';
  import 'bootstrap/dist/css/bootstrap.css';
  import { defineComponent, onMounted, ref } from 'vue';
  //import { Format, IsNullOrEmpty } from "@/ts/PubFun/clsString"
  import { DnFunctionCRUDEx } from '@/views/AIModule/DnFunctionCRUDEx';
  import DnFunction_EditCom from '@/views/AIModule/DnFunction_Edit.vue';
  import DnFunction_DetailCom from '@/views/AIModule/DnFunction_Detail.vue';
  import router from '@/router';
  import {
    divVarSet,
    refDivLayout,
    refDivQuery,
    refDivFunction,
    refDivList,
    refDnFunction_Edit,
    refDnFunction_Detail,
  } from '@/views/AIModule/DnFunctionVueShare';
  export default defineComponent({
    name: 'DnFunctionCRUD',
    components: {
      // 组件注册
      DnFunction_EditCom,
      DnFunction_DetailCom,
    },
    setup() {
      const strTitle = ref('数据结点函数维护');

      const refDivDataLst = ref();

      onMounted(() => {
        const objPage = new DnFunctionCRUDEx();

        objPage.PageLoadCache();
        //this.myonload();
      });
      // 在 setup 函数中调用 fun1()
      const callMethod = () => {
        openNewWindow(); // 注意：在 setup 中不能使用 this，需要使用 methods 属性绑定的方法名
      };

      const openNewWindow = () => {
        window.open('/pyf-about2', '_blank');
      };
      function btn_Click(strCommandName: string, strKeyId: string) {
        switch (strCommandName) {
          case 'Detail':
            break;
          case 'Create':
          case 'AddNewRecordWithMaxId':
          case 'CreateWithMaxId':
          case 'Update':
          case 'UpdateRecord':
          case 'UpdateRecordInTab':
            break;
          case 'JumpToNewTab':
            // router.push({ name: 'pyf-about2' });
            router.push({ name: 'testMyTree' });

            break;
          case 'TestAutoComplete':
            // router.push({ name: 'pyf-about2' });
            router.push({ name: 'testAutoComplete' });

            break;
          case 'TestAutoCompletePro':
            // router.push({ name: 'pyf-about2' });
            router.push({ name: 'testAutoCompletePro' });

            break;
          case 'JumpToNewWin':
            // router.push({ name: 'pyf-about2' });
            openNewWindow();
            break;
          default:
            break;
        }
        DnFunctionCRUDEx.btn_Click(strCommandName, strKeyId);
      }
      return {
        strTitle,
        btn_Click,

        ...divVarSet,
        refDivLayout,
        refDivQuery,
        refDivFunction,
        refDivList,
        refDivDataLst,
        callMethod,
        refDnFunction_Edit,
        refDnFunction_Detail,
      };
    },
    watch: {
      // 数据监听
    },

    methods: {
      fun1() {
        console.log('方法被调用');
      },
    },
  });
</script>
<style scoped></style>
